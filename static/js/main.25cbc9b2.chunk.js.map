{"version":3,"sources":["UserPrompt.js","firebase.js","PromptSubmit.js","Modal.js","DailyPrompts.js","Timer.js","Form.js","PDFExport.js","App.js","serviceWorker.js","index.js"],"names":["UserPrompt","this","props","name","prompt","onClick","handleClick","value","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","PromptSubmit","submitPrompt","e","preventDefault","dbRef","database","ref","object","state","push","closeModal","handleUserInput","setState","target","id","className","back","aria-hidden","action","onSubmit","htmlFor","type","placeholder","onChange","required","cols","rows","Modal","selectPrompt","promptText","showForm","renderPrompts","selectedPrompt","exitModal","aria-label","userPrompts","map","index","key","DailyPrompts","day","dailyPrompt","Timer","doIntervalChange","keepChecking","myInterval","setInterval","prevState","counter","sendTime","clearInterval","swal","text","secondsToCount","prevProps","Form","saveTitle","disabled","disableForm","saveMessage","wordCount","enableForm","Font","register","family","src","styles","StyleSheet","create","page","flexDirection","backgroundColor","paddingTop","paddingLeft","paddingRight","paddingBottom","section","margin","flexGrow","title","fontSize","fontFamily","fontWeight","color","marginBottom","textAlign","bodyText","lineHeight","PDFExport","size","style","message","App","getDailyPrompt","Date","getDate","setTimer","formDisable","writingTimer","elapsedTime","displayForm","getTime","stopTimer","setTime","getFormSelection","saveText","stopTime","startTime","isCountingDown","numWords","split","filter","item","length","typeOfText","console","log","toggleModal","modalOpen","percent","Math","floor","percentTime","document","documentElement","setProperty","toggleTheme","lightMode","theme","savePDF","titleComplete","messageComplete","pdfClass","prompts","on","snapshot","data","val","promptsArray","unshift","fileName","blob","url","loading","error","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.25cbc9b2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass UserPrompt extends Component { \r\n    render() {\r\n        return (\r\n            <li>\r\n                <p><span>Submitted by:</span> {this.props.name}</p>\r\n                <p>{this.props.prompt}</p>\r\n                <button onClick={this.props.handleClick} value={this.props.prompt}>Use This Prompt</button>\r\n            </li>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default UserPrompt;","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBHGyhWu241c44zWc72hDrp8ZJuU3djt6g\",\r\n  authDomain: \"u-2-write.firebaseapp.com\",\r\n  databaseURL: \"https://u-2-write.firebaseio.com\",\r\n  projectId: \"u-2-write\",\r\n  storageBucket: \"u-2-write.appspot.com\",\r\n  messagingSenderId: \"541732055845\",\r\n  appId: \"1:541732055845:web:c2c0dbbf598c65c1be08cc\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { Component } from 'react';\r\nimport firebase from './firebase';\r\n\r\nclass PromptSubmit extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            name: \"Anonymous\",\r\n            prompt: \"\"\r\n        }\r\n    }\r\n\r\n    // Saves the submitted prompt to Firebase\r\n    submitPrompt = (e) => {\r\n        e.preventDefault();\r\n        const dbRef = firebase.database().ref()\r\n        const object = { name: this.state.name, prompt: this.state.prompt }\r\n        dbRef.push(object) \r\n\r\n        this.props.closeModal()\r\n    }\r\n    \r\n    // Sets the state of the matching id (name or prompt) to the corresponding input value\r\n    handleUserInput = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <div className=\"modalTop\"> \r\n                    <button className=\"backButton\" onClick={this.props.back}>\r\n                        <i className=\"fas fa-chevron-left\" aria-hidden=\"true\"></i>\r\n                        <p>Back to User Prompts</p>\r\n                    </button>\r\n                </div>\r\n                <form action=\"\" className=\"promptSubmitForm\" onSubmit={this.submitPrompt}>\r\n                    <label className=\"sr-only\" htmlFor=\"name\">Your Name (optional)</label>\r\n                    <input type=\"text\" id=\"name\" placeholder=\"Your Name (optional)\" onChange={this.handleUserInput}/>\r\n                    <label className=\"sr-only\" htmlFor=\"prompt\">Your Prompt</label>\r\n                    <textarea name=\"prompt\" id=\"prompt\" placeholder=\"Type your prompt here\" required cols=\"20\" rows=\"10\" onChange={this.handleUserInput}></textarea> \r\n                    <button type=\"submit\">Submit Prompt!</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PromptSubmit;","import React, { Component } from 'react';\r\nimport UserPrompt from './UserPrompt' \r\nimport PromptSubmit from './PromptSubmit'\r\n\r\nclass Modal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedPrompt: \"\",\r\n            renderPrompts: true\r\n        }\r\n    } \r\n    \r\n    // Sends the text of the chosen prompt to the parent component to have it displayed\r\n    selectPrompt = (promptText) => { \r\n        this.props.selectPrompt(promptText)\r\n    }\r\n\r\n    // Toggles the visibility of the prompt submission component on button click\r\n    showForm = () => {\r\n        this.setState({ renderPrompts: !this.state.renderPrompts })\r\n    } \r\n\r\n    render() {\r\n            return (\r\n                <div className=\"modalOuter\">\r\n                    <div className=\"modalInner\">\r\n                        <button className=\"exitButton\" onClick={this.props.exitModal} aria-label=\"Exit modal\">\r\n                            <i className=\"far fa-times-circle\" aria-hidden=\"true\"></i>\r\n                        </button> \r\n                        {this.state.renderPrompts ? \r\n                        <>\r\n                            <div className=\"modalTop\">\r\n                                <h2>Prompts Submitted by Users</h2>\r\n                                <button onClick={this.showForm}>\r\n                                    <p>Submit a Prompt</p>\r\n                                    <i className=\"fas fa-chevron-right\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                            </div>\r\n                            <ul>\r\n                                {this.props.userPrompts.map((prompt, index) => {\r\n                                    return(\r\n                                        <UserPrompt \r\n                                        key={index}\r\n                                        name={prompt.name}\r\n                                            prompt={prompt.prompt}\r\n                                            handleClick={this.props.selectPrompt}\r\n                                        /> \r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </>\r\n                        : <PromptSubmit closeModal={this.closeModal} back={this.showForm}/>    \r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n    }\r\n\r\n\r\nexport default Modal;","const DailyPrompts = () => {\r\n  const dailyPrompts = [\r\n    {\r\n      day: 1,\r\n      dailyPrompt:\r\n        \"Write a 150 word story in the comedy genre. It's about a philosopher and should include a football. Also use the sentence 'Is anyone there?' Bonus prompt: The story involves a fight.\",\r\n    },\r\n    {\r\n      day: 2,\r\n      dailyPrompt:\r\n        \"Write a 350 word story in the drama genre. It's about an art director and should include a crown. Also use the sentence 'It's too warm.' Bonus prompt: There is a great storm.\",\r\n    },\r\n    {\r\n      day: 3,\r\n      dailyPrompt:\r\n        \"Write a 300 word story in the military genre. It's about an emperor and should include a steam boat. Also use the sentence 'Whoopsidaisies!' Bonus prompt: Your character is hated by everyone.\",\r\n    },\r\n    {\r\n      day: 4,\r\n      dailyPrompt:\r\n        \"Write a 100 word story in the adventure genre. It's about a dog breeder and should include a certificate. Also use the sentence 'He can change.' Bonus prompt: Your character is loved by everyone.\",\r\n    },\r\n    {\r\n      day: 5,\r\n      dailyPrompt:\r\n        \"Write a 400 word story in the military genre. It's about a cowardly fireman and should include a piece of paper. Also use the sentence 'I love you.' Bonus prompt: Your character is hated by everyone.\",\r\n    },\r\n    {\r\n      day: 6,\r\n      dailyPrompt:\r\n        \"Write a 150 word story in the science fiction genre. It's about a hot-shot ceo and should include coloring pencils. Also use the sentence 'Don't trust everything you see.' Bonus prompt: The Sun is failing.\",\r\n    },\r\n    {\r\n      day: 7,\r\n      dailyPrompt:\r\n        \"Write a 100 word story in the military genre. It's about a pilot and should include a time machine. Also use the sentence 'Not for you.' Bonus prompt: The story takes place in a desert.\",\r\n    },\r\n    {\r\n      day: 8,\r\n      dailyPrompt:\r\n        \"Write a 700 word story in the children genre. It's about a fat baker and should include a milkshake. Also use the sentence 'Run!' Bonus prompt: The story takes place two-hundred years from now.\",\r\n    },\r\n    {\r\n      day: 9,\r\n      dailyPrompt:\r\n        \"Write a 450 word story in the romance genre.It's about a dog breeder and should include a computer. Also use the sentence 'You have my permission.' Bonus prompt: Your story involves a damsel in distress.\",\r\n    },\r\n    {\r\n      day: 10,\r\n      dailyPrompt:\r\n        \"Write a 900 word story in the magical realism genre. It's about a barista and should include a fridge. Also use the sentence 'Leave me alone!' Bonus prompt: Your character is very shy.\",\r\n    },\r\n    {\r\n      day: 11,\r\n      dailyPrompt:\r\n        \"Write a 750 word story in the epic genre. It's about an unsuccessful policeman and should include glass. Also use the sentence 'He can change.' Bonus prompt: There is a great storm.\",\r\n    },\r\n    {\r\n      day: 12,\r\n      dailyPrompt:\r\n        \"Write a 200 word story in the adventure genre. It's about a fat baker and should include a pillow. Also use the sentence 'Thanks for nothing.' Bonus prompt: Your character is shipwrecked.\",\r\n    },\r\n    {\r\n      day: 13,\r\n      dailyPrompt:\r\n        \"Write a 650 word story in the comedy genre. It's about a liar and should include a pencil. Also use the sentence 'Thanks for nothing.' Bonus prompt: Your character is dying.\",\r\n    },\r\n    {\r\n      day: 14,\r\n      dailyPrompt:\r\n        \"Write a 150 word story in the drama genre. It's about a scientist and should include coloring pencils. Also use the sentence 'Aren't you afraid?' Bonus prompt: The story takes place in a desert.\",\r\n    },\r\n    {\r\n      day: 15,\r\n      dailyPrompt:\r\n        \"Write a 800 word story in the comedy genre. It's about a druid and should include fire. Also use the sentence 'What problem?' Bonus prompt: Your character has a world-changing idea.\",\r\n    },\r\n    {\r\n      day: 16,\r\n      dailyPrompt:\r\n        \"Write a 600 word story in the military genre. It's about a politician and should include not enough money. Also use the sentence 'I'll deal with you later.' Bonus prompt: Your character is shipwrecked.\",\r\n    },\r\n    {\r\n      day: 17,\r\n      dailyPrompt:\r\n        \"Write a 900 word story in the comedy genre. It's about a politician and should include a watch. Also use the sentence 'I'd like a day without punishing you.' Bonus prompt: The story involves a fight.\",\r\n    },\r\n    {\r\n      day: 18,\r\n      dailyPrompt:\r\n        \"Write a 950 word story in the children genre. It's about a demon and should include a ripped-up bank note. Also use the sentence 'I'll deal with you later.' Bonus prompt: Your character is shipwrecked.\",\r\n    },\r\n    {\r\n      day: 19,\r\n      dailyPrompt:\r\n        \"Write a 850 word story in the suspense genre. It's about a fascist and should include a flag. Also use the sentence 'Whoopsidaisies!' Bonus prompt: Your character has just met the love of his/her life.\",\r\n    },\r\n    {\r\n      day: 20,\r\n      dailyPrompt:\r\n        \"Write a 900 word story in the science fiction genre. It's about a film producer and should include a dictionary. Also use the sentence 'There is no time.' Bonus prompt: Your story involves a damsel in distress.\",\r\n    },\r\n    {\r\n      day: 21,\r\n      dailyPrompt:\r\n        \"Write a 50 word story in the magical realism genre. It's about a dog breeder and should include a motor bike. Also use the sentence 'It is required of you.' Bonus prompt: Your story involves a damsel in distress.\",\r\n    },\r\n    {\r\n      day: 22,\r\n      dailyPrompt:\r\n        \"Write a 50 word story in the fantasy genre. It's about a truck driver and should include a football. Also use the sentence 'You have my permission.' Bonus prompt: Your character is shipwrecked.\",\r\n    },\r\n    {\r\n      day: 23,\r\n      dailyPrompt:\r\n        \"Write a 550 word story in the suspense genre. It's about an archivist and should include a fridge. Also use the sentence 'Whoopsidaisies!' Bonus prompt: Your character is loved by everyone.\",\r\n    },\r\n    {\r\n      day: 24,\r\n      dailyPrompt:\r\n        \"Write a 150 word story in the drama genre. It's about an addict and should include an umbrella. Also use the sentence 'It's your fault.' Bonus prompt: The story takes place in a desert.\",\r\n    },\r\n    {\r\n      day: 25,\r\n      dailyPrompt:\r\n        \"Write a 1000 word story in the crime genre. It's about a famous musician and should include headphones. Also use the sentence 'I will end you for this.' Bonus prompt: Your character is very shy.\",\r\n    },\r\n    {\r\n      day: 26,\r\n      dailyPrompt:\r\n        \"Write a 250 word story in the magical realism genre. It's about a dictator and should include a wooden cross. Also use the sentence 'You will take the fall for this.' Bonus prompt: Your character is dying.\",\r\n    },\r\n    {\r\n      day: 27,\r\n      dailyPrompt:\r\n        \"Write a 1000 word story in the adventure genre. It's about a bank counter and should include a set of binoculars. Also use the sentence 'You shouldn't have heard that.' Bonus prompt: Your character is dying.\",\r\n    },\r\n    {\r\n      day: 28,\r\n      dailyPrompt:\r\n        \"Write a 150 word story in the suspense genre. It's about a gamer and should include a watch. Also use the sentence 'Not for you.' Bonus prompt: There is a great storm.\",\r\n    },\r\n    {\r\n      day: 29,\r\n      dailyPrompt:\r\n        \"Write a 100 word story in the magical realism genre. It's about a struggling musician and should include ice cream. Also use the sentence 'Leave me alone!' Bonus prompt: Your character has just met the love of his/her life.\",\r\n    },\r\n    {\r\n      day: 30,\r\n      dailyPrompt:\r\n        \"Write a 550 word story in the magical realism genre. It's about an acupuncturist and should include a painting. Also use the sentence 'Never.' Bonus prompt: The story takes place in a desert.\",\r\n    },\r\n    {\r\n      day: 31,\r\n      dailyPrompt:\r\n        \"Write a 500 word story in the children genre. It's about a penniless writer and should include a window. Also use the sentence 'I will end you for this.' Bonus prompt: Your character has a world-changing idea.\",\r\n    },\r\n  ];\r\n\r\n  return dailyPrompts;\r\n};\r\n\r\nexport default DailyPrompts;\r\n","import React, { Component } from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\n// Code modified from Coding Entrepeneurs: https://www.youtube.com/watch?v=NAx76xx40jM\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counter: 10,\r\n      keepChecking: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { secondsToCount } = this.props;\r\n    this.setState({\r\n      counter: secondsToCount,\r\n      keepChecking: this.props.keepChecking\r\n    });\r\n    // this.state.keepChecking ?\r\n    this.doIntervalChange();\r\n    //   clearInterval(this.myInterval);\r\n  }\r\n\r\n  doIntervalChange = () => {\r\n    if (this.props.keepChecking) {\r\n      this.myInterval = setInterval(() => {\r\n        this.setState((prevState) => ({ counter: prevState.counter - 1 }));\r\n        this.props.sendTime(this.state.counter);\r\n        if (this.state.counter < 0) {\r\n          clearInterval(this.myInterval);\r\n          this.setState({\r\n            counter: 0,\r\n          });\r\n          swal({ \r\n            text: \"Keep writing!\"\r\n           });\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.keepChecking !== prevProps.keepChecking) {\r\n      clearInterval(this.myInterval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.myInterval);\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"visuallyHidden\">\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React from 'react'\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <>\r\n            <form action=\"\" className=\"writingForm\">\r\n                <label htmlFor=\"title\" className=\"sr-only\">Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"title\"\r\n                    id=\"title\"\r\n                    placeholder=\"Title\"\r\n                    onChange={props.saveTitle}\r\n                />\r\n                <textarea\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    disabled={props.disableForm}\r\n                    onChange={props.saveMessage}\r\n                ></textarea>\r\n                <div className=\"outer\">\r\n                    <div className=\"inner\"></div>\r\n                </div>\r\n                <div className=\"formBottomBar\">\r\n                    <p>Word Count: {props.wordCount}</p>\r\n                    <button type=\"reset\" onClick={props.enableForm}>Clear</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Font } from '@react-pdf/renderer';\r\n\r\n// Register font\r\nFont.register({ family: 'Josefin Sans', src: `http://fonts.gstatic.com/s/josefinsans/v9/xgzbb53t8j-Mo-vYa23n5onF5uFdDttMLvmWuJdhhgs.ttf` });\r\nFont.register({ family: 'Lato', src: `http://fonts.gstatic.com/s/lato/v13/v0SdcGFAl2aezM9Vq_aFTQ.ttf` });\r\n\r\n// Create styles for PDF\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        paddingTop: 40,\r\n        paddingLeft: 70,\r\n        paddingRight: 70,\r\n        paddingBottom: 40\r\n    },\r\n    section: {\r\n        margin: 10,\r\n        flexGrow: 1\r\n    },\r\n    title: {\r\n        fontSize: 45,\r\n        fontFamily: 'Josefin Sans',\r\n        fontWeight: 'bold',\r\n        color: 'black',\r\n        margin: 10,\r\n        marginBottom: 30,\r\n        textAlign: 'center' \r\n    },\r\n    bodyText: {\r\n        fontSize: 15,\r\n        fontFamily: 'Lato',\r\n        fontWeight: 'light',\r\n        color: 'black',\r\n        margin: 10,\r\n        textAlign: \"left\",\r\n        lineHeight: 1.5,\r\n    }\r\n});\r\n\r\n// Create Document Component\r\nconst PDFExport = (props) => (\r\n    <Document>\r\n        <Page size=\"A4\" style={styles.page}>\r\n            <View style={styles.section}>\r\n                <Text style={[styles.title]}>{props.title}</Text>\r\n                <Text style={[styles.bodyText]}>{props.message}</Text>\r\n            </View>\r\n        </Page>\r\n    </Document>\r\n);\r\n\r\nexport default PDFExport;","import React, { Component } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport firebase from \"./firebase\";\r\nimport DailyPrompts from \"./DailyPrompts\";\r\nimport Timer from \"./Timer\";\r\nimport Form from './Form'\r\nimport \"./styles.css\";\r\nimport { PDFViewer, PDFDownloadLink, Document, Page } from '@react-pdf/renderer';\r\nimport PDFExport from './PDFExport';\r\nimport swal from \"sweetalert\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      modalOpen: false,\r\n      title: \"\",\r\n      message: \"\",\r\n      wordCount: \"\",\r\n      setTime: 300000,\r\n      elapsedTime: 300000,\r\n      prompts: [],\r\n      selectedPrompt: \"\",\r\n      userPrompts: [],\r\n      isCountingDown: false,\r\n      percentTime: \"\",\r\n      dailyPrompt: \"\",\r\n      formDisable: false,\r\n      stopTimer: false,\r\n      keepChecking: true,\r\n      displayForm: false,\r\n      lightMode: false,\r\n      theme: \"lightMode\",\r\n      pdfClass: \"visuallyHidden\",\r\n      titleComplete: \"\",\r\n      messageComplete: \"\"\r\n    };\r\n  }\r\n\r\n  // On page load, get the user generated prompts saved to Firebase\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.on(\"value\", (snapshot) => {\r\n      const data = snapshot.val();\r\n      const promptsArray = [];\r\n      for (let key in data) {\r\n        promptsArray.unshift(data[key]);\r\n      }\r\n      this.setState({ userPrompts: promptsArray });\r\n    });\r\n  }\r\n\r\n  // Gets the prompt of the day from the imported DailyPrompt function component\r\n  getDailyPrompt = () => {\r\n    const dailyPromptsArray = DailyPrompts();\r\n    const today = new Date().getDate();\r\n    const prompt = dailyPromptsArray[today - 1].dailyPrompt;\r\n    this.setState({\r\n      selectedPrompt: prompt,\r\n    });\r\n  };\r\n\r\n  setTimer = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      formDisable: false,\r\n    });\r\n\r\n    // Sets the writing timer according to the user's selection\r\n    const writingTimer = setInterval(() => {\r\n      this.setState({\r\n        keepChecking: true,\r\n        elapsedTime: this.state.elapsedTime - 1000,\r\n        displayForm: true,\r\n      });\r\n      this.getTime();\r\n\r\n      // When the timer reaches 0 \r\n      if (this.state.elapsedTime === 0) {\r\n        // Display the pop-up modal\r\n        swal({\r\n          text: \"Time's up! Restart the timer to continue writing\"\r\n        });\r\n\r\n        this.setState({\r\n          keepChecking: false,\r\n          formDisable: true,\r\n          stopTimer: !this.state.stopTimer,\r\n          elapsedTime: this.state.setTime,\r\n        });\r\n        clearInterval(writingTimer);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  // Gets the user's selected time and saves it in state\r\n  getFormSelection = (e) => {\r\n    this.setState({\r\n      setTime: e.target.value,\r\n      elapsedTime: e.target.value,\r\n    })\r\n  };\r\n\r\n  // Saves the title input in the component state, on change\r\n  saveTitle = (e) => {\r\n    this.saveText(e, \"title\");\r\n  };\r\n\r\n  // Saves the textarea input in the component state, on change\r\n  saveMessage = (e) => {\r\n    this.saveText(e, \"message\");\r\n    this.stopTime();\r\n    this.startTime();\r\n  };\r\n\r\n  // Stops the 15 second warning timer\r\n  stopTime = () => {\r\n    this.setState({\r\n      isCountingDown: false,\r\n    });\r\n  };\r\n\r\n  // Starts the 15 second warning timer\r\n  startTime = () => {\r\n    this.setState({\r\n      isCountingDown: true,\r\n    });\r\n  };\r\n\r\n  wordCount = () => {\r\n    const words = this.state.message;\r\n    const numWords = words.split(\" \").filter((item) => {\r\n      return item !== \"\";\r\n    });\r\n    this.setState({\r\n      wordCount: numWords.length,\r\n    });\r\n  };\r\n\r\n  // Switch case for saving text inputs into the component state\r\n  saveText = (e, typeOfText) => {\r\n    switch (typeOfText) {\r\n      case \"title\":\r\n        this.setState({\r\n          title: e.target.value,\r\n        });\r\n        break;\r\n      case \"message\":\r\n        this.setState(\r\n          {\r\n            message: e.target.value,\r\n          },\r\n          () => {\r\n            this.wordCount();\r\n          }\r\n        );\r\n        break;\r\n      default:\r\n        console.log(\"no text state to save found\");\r\n    }\r\n  };\r\n\r\n  // Toggles the visibility of the modal\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen,\r\n    });\r\n  };\r\n\r\n  // On selecting a user generated prompt, display the selected prompt above the writing area and close the modal\r\n  selectPrompt = (prompt) => {\r\n    const selectedPrompt = prompt.target.value;\r\n    this.setState({\r\n      selectedPrompt: selectedPrompt,\r\n      modalOpen: !this.state.modalOpen,\r\n    });\r\n  };\r\n\r\n  // Calculates the elasped writing time as a percentage of time remaining to set the width of the progress bar\r\n  getTime = () => {\r\n    let percent = Math.floor(\r\n      (this.state.elapsedTime / this.state.setTime) * 100\r\n    );\r\n    this.setState({\r\n      percentTime: percent,\r\n    });\r\n    document.documentElement.style.setProperty(\r\n      \"--inner-width\",\r\n      `${this.state.percentTime}%`\r\n    );\r\n  };\r\n\r\n  //Toggles the light and dark mode theme\r\n  toggleTheme = () => {\r\n    this.setState({\r\n      lightMode: !this.state.lightMode,\r\n    });\r\n    if (this.state.lightMode) {\r\n      this.setState({\r\n        theme: \"lightMode\"\r\n      })\r\n      document.documentElement.style.setProperty(\"--body-font-color\", \"black\")\r\n    } else {\r\n      this.setState({\r\n        theme: \"darkMode\"\r\n      });\r\n      document.documentElement.style.setProperty(\"--body-font-color\", \"white\")\r\n    }\r\n  }\r\n\r\n  // Saves the input on submit\r\n  savePDF = () => {\r\n    this.setState({\r\n      titleComplete: this.state.title,\r\n      messageComplete: this.state.message,\r\n      pdfClass: \"\"\r\n    })\r\n  }\r\n\r\n  enableForm = () => { this.setState({ formDisable: false }) }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`App ${this.state.theme}`}>\r\n        <header className=\"wrapper\">\r\n          <h1>Story Starter</h1>\r\n          <div className=\"toggleButton\">\r\n            {/* <span>{this.state.lightMode ? \"Dark\" : \"Light\"} Mode</span> */}\r\n            <button className={this.state.lightMode ? \"move\" : null} onClick={this.toggleTheme}>\r\n              <i className=\"fas fa-sun\"></i>\r\n              <i className=\"fas fa-moon\"></i>\r\n            </button>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"wrapper\">\r\n          <div className=\"promptSelection\">\r\n            <h2>Choose Your Prompt</h2>\r\n            <button onClick={this.getDailyPrompt}>Get Daily Prompt</button>\r\n            <button onClick={this.toggleModal}>Get User Prompts</button>\r\n          </div>\r\n          {this.state.modalOpen ? (\r\n            <Modal\r\n              exitModal={this.toggleModal}\r\n              selectPrompt={this.selectPrompt}\r\n              userPrompts={this.state.userPrompts}\r\n            />\r\n          ) : null}\r\n          <form action=\"\" className=\"timeSelection\" onSubmit={this.setTimer}>\r\n            <h2>How long do you want to write?</h2>\r\n            <select\r\n              name=\"intervals\"\r\n              id=\"intervals\"\r\n              onChange={this.getFormSelection}\r\n            >\r\n              <option value=\"300000\">5 min</option>\r\n              <option value=\"600000\">10 min</option>\r\n              <option value=\"1200000\">20 min</option>\r\n              <option value=\"1800000\">30 min</option>\r\n              <option value=\"2700000\">45 min</option>\r\n              <option value=\"3600000\">1 hr</option>\r\n            </select>\r\n            <button type=\"submit\" onClick={this.startTime}>Start Timer</button>\r\n          </form>\r\n\r\n          {this.state.isCountingDown ? (\r\n            <Timer\r\n              secondsToCount=\"15\"\r\n              sendTime={this.getTime}\r\n              keepChecking={this.state.keepChecking}\r\n            />\r\n          ) : null}\r\n\r\n          <div className=\"writingComponent\">\r\n            <h3>Selected Prompt:</h3>\r\n            <p className=\"prompt\">{this.state.selectedPrompt}</p>\r\n\r\n            <div className=\"saveToPDF\">\r\n              <PDFDownloadLink className={this.state.pdfClass} document={\r\n                <PDFExport\r\n                  title={this.state.titleComplete}\r\n                  message={this.state.messageComplete}\r\n                />} fileName={`${this.state.titleComplete}.pdf`}>\r\n                {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\r\n              </PDFDownloadLink>\r\n              {this.state.displayForm ?\r\n                <button type=\"button\" onClick={this.savePDF} aria-label=\"Save To PDF\">\r\n                  <i className=\"far fa-file-pdf\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                : null\r\n              }\r\n            </div>\r\n\r\n            {this.state.displayForm\r\n              ? (\r\n                <Form\r\n                  saveTitle={this.saveTitle}\r\n                  disableForm={this.state.formDisable}\r\n                  saveMessage={this.saveMessage}\r\n                  wordCount={this.state.wordCount}\r\n                  enableForm={this.enableForm}\r\n                />\r\n              )\r\n              : null}\r\n          </div>\r\n        </main>\r\n\r\n        <footer className=\"wrapper\">\r\n          <p>©2020 <a href=\"https://kajanthkumar.com/\">Kajanth</a>, <a href=\"https://www.robinnong.com\">Robin</a> and <a href=\"https://shanelbeebe.com/\">Shanel</a>.</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}